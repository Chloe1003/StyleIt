<?xml version="1.0" encoding="UTF-8"?>

<!-- 마이바티스 3 Mapper DOCTYPE -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<!-- 매퍼 설정 -->
<mapper namespace="web.dao.face.ShopDao">
	
	<select id="totalCnt" resultType="int">
		SELECT count(*) FROM product
	</select>
	
	<select id="selectProduct" parameterType="int" resultType="web.dto.Product">
		SELECT * FROM product
		WHERE p_no=#{p_no }
	</select>
	
	<select id="selectProductList" parameterType="HashMap" resultType="web.dto.Product">
       	SELECT * FROM (
	  		SELECT rownum rnum, M.* FROM (  
		        SELECT p.p_no, p.p_price, p.p_name, f.fu_storedname, b.pb_name,
		            (select count(*) from productlike l where p.p_no = l.p_no) cntplike
		            <if test="login">
		            ,(select count(*) from productlike l where p.p_no = l.p_no and m_no = #{m_no }) plikecheck
		            </if>
		        FROM product p
		        JOIN fileupload f
				ON p.fu_no = f.fu_no
		        JOIN productbrand b
		        ON p.pb_no = b.pb_no
		        <if test="ps_no>0 and search != null">
		        	<!-- 카테고리 조건 & 검색어 둘 다 있을 때 -->		        	
		       		WHERE p.ps_no = #{ps_no } AND (p.p_name like '%'||#{search }||'%' OR b.pb_name like '%'||#{search }||'%')
		        </if>
		        <if test="ps_no>0 and search == null">
		       		<!-- 카테고리 조건만 있을 때 -->
		       		WHERE p.ps_no = #{ps_no } 
		        </if>
		        <if test="ps_no==0 and search != null">
		        	<!-- 검색어만 있을 때  -->
		        	WHERE p.p_name like '%'||#{search }||'%' OR b.pb_name like '%'||#{search }||'%'
		        </if>
		        )M
	  		)R
	  	WHERE rnum BETWEEN #{paging.startNo } AND #{paging.endNo }
       	</select>	
	
	<select id="plikeCheck" parameterType="HashMap" resultType="int">
		SELECT COUNT(*) FROM productlike
		WHERE m_no = #{m_no } AND p_no = #{p_no }	
	</select>
	
	<select id="plikeInsert" parameterType="HashMap">
		INSERT INTO productlike(plike_no, p_no, m_no) 
		VALUES (productlike_seq.nextval, #{p_no }, #{m_no })	
	</select>
	
	<select id="plikeDelete" parameterType="HashMap">
		DELETE productlike
		WHERE p_no = #{p_no } AND m_no = #{m_no }	
	</select>
	
	<select id="plikeCnt" parameterType="int" resultType="int">
	  	SELECT COUNT(*) FROM productlike
  		WHERE p_no = #{p_no }	
	</select>
	
	<select id="selectProductView" parameterType="HashMap" resultType="web.dto.Product">
        SELECT p.p_no, p.p_price, p.p_name, f.fu_storedname, b.pb_name, p.p_url,
            (select count(*) from productlike l where p.p_no = l.p_no) cntplike
            <if test="login">
            ,(select count(*) from productlike l where p.p_no = l.p_no and m_no = #{m_no }) plikecheck
            </if>
        FROM product p
        JOIN fileupload f
		ON p.fu_no = f.fu_no
        JOIN productbrand b
        ON p.pb_no = b.pb_no
        WHERE p.p_no= #{p_no }
	</select>
	
	<select id="selectStylingByProduct" parameterType="HashMap" resultType="web.dto.Styling">
        SELECT s.s_no, s.m_no, s.s_name, s.s_content, s.fu_no, f.fu_storedname, s.st_no, s.s_date
   			, ( select count(*) from stylinglike l where s.s_no = l.s_no ) cntslike
    		<if test="login">
    		, ( select count(*) from stylinglike l where s.s_no = l.s_no and m_no = #{m_no } ) slikecheck
    		</if>
        FROM styling s
        JOIN fileupload f
        ON f.fu_no = s.fu_no
        JOIN stylingproduct sp
        ON sp.s_no = s.s_no
        WHERE sp.p_no = #{p_no }
	</select>
	
  	<select id="selectSimilarProduct" parameterType="HashMap" resultType="web.dto.Product">
  		SELECT * FROM (
			WITH ratings AS(
    			SELECT 
			        p.p_no, p.p_price, p.p_name, f.fu_storedname, b.pb_name,
                    (select count(*) from productlike l where p.p_no = l.p_no) cntplike
                    <if test="login">
                    ,(select count(*) from productlike l where p.p_no = l.p_no and m_no = #{m_no }) plikecheck
                    </if>
			        ,0.7*(CASE WHEN p.po_no= #{products.po_no }    THEN 1 ELSE 0 END)
			        + 0.1*(CASE WHEN p.pb_no= #{products.pb_no }   THEN 1 ELSE 0 END)
			        + 0.8*(CASE WHEN p.ps_no= #{products.ps_no }  THEN 1 ELSE 0 END)
			        + 0.7*(CASE WHEN p.pco_no= #{products.pco_no } THEN 1 ELSE 0 END)
			        + 0.3*(CASE WHEN p.pp_no= #{products.pp_no } THEN 1 ELSE 0 END) AS score
			    FROM product p
			    JOIN fileupload f
		        ON p.fu_no = f.fu_no
                JOIN productbrand b
                ON p.pb_no = b.pb_no
			    WHERE  p.p_gender= #{products.p_gender } AND p.pca_no = #{products.pca_no } AND p.p_no!= #{products.p_no }
			) 
			    SELECT * FROM ratings 
			    ORDER BY score DESC
	  	<![CDATA[
			) WHERE ROWNUM <= 5
		]]>  	
  	</select>	
  	
  	<select id="selectProductOccasion" resultType="web.dto.ProductOccasion">
  		SELECT * FROM productoccasion
  	</select>
  	
  	<select id="selectProductStyle" resultType="web.dto.ProductStyle">
  		SELECT * FROM productstyle
  	</select>
</mapper>