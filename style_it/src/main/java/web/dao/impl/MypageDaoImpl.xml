<?xml version="1.0" encoding="UTF-8"?>

<!-- 마이바티스 3 Mapper DOCTYPE -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <!-- 매퍼 설정 -->
  <mapper namespace="web.dao.face.MypageDao">
	
	<select id="getUserInfo" parameterType="web.dto.Member" resultType="web.dto.Member">
	
	  select * from member m, FileUpload f
	  where m.fu_no = f.fu_no and m_no=#{m_no }
	  
	</select>
	
	<select id="checkPass" resultType="int" parameterType="web.dto.Member">
	
		SELECT COUNT(*) FROM member
  		WHERE m_email = #{m_email } AND m_pw = #{m_pw }
	
	</select>
	
	<update id="changePass" parameterType="web.dto.Member">
	
		UPDATE member
  		SET m_pw = #{m_pw }
  		WHERE m_no = #{m_no }
		
	</update>
	<update id="changeNick" parameterType="web.dto.Member">
	
		UPDATE member
  		SET m_nick = #{m_nick }
  		WHERE m_no = #{m_no }
		
	</update>
	
	<!-- 다음 번호 미리 받아오기 -->
	<select id="dualNo" resultType="int">
	
		SELECT FileUpload_SEQ.nextval from dual
	
	</select>
	
	<insert id="insertImg" parameterType="web.dto.FileUpload">
		
		<!-- SELECT FileUpload_SEQ.nextval from dual -->
		
		INSERT INTO FILEUPLOAD
			(fu_no, fu_storedName, fut_no )
		VALUES 
			( #{fu_no}, #{fu_storedName }, 5 )
		<!-- <selectKey>  </selectKey> -->
			
	</insert>
	
	<update id="updateUserImg" parameterType="web.dto.Member">
      
		UPDATE member
  		SET fu_no = #{fu_no }
  		WHERE m_no = #{m_no }
		
	</update>
	
	<update id="deleteUser" parameterType="web.dto.Member">
      
		UPDATE member
  		SET m_valid = 'N'
  		WHERE m_no = #{m_no }
		
	</update>
	
	<select id="getFollower" resultType="int" parameterType="web.dto.Member">
		 
		 select count(*) from member m, Follow f
     	 where  m.m_no = f.follower_no and m_no = #{m_no }
	
	</select>
	
	<select id="getFollowee" resultType="int" parameterType="web.dto.Member">
		 
		 select count(*) from member m, Follow f
     	 where  m.m_no = f.followee_no and m_no = #{m_no }
	
	</select>
	
	<select id="getCoStyling" resultType="int" parameterType="web.dto.Member">
	
		select count(*) from member m, Styling s
      	where m.m_no = s.m_no and m.m_no = #{m_no }
      		
	</select>

	<select id="getCoCollection" resultType="int" parameterType="web.dto.Member">
	
		select count(*) from member m, CollectionFolder cf
      	where m.m_no = cf.m_no and m.m_no = #{m_no }
      		
	</select>
	
	<select id="getCoLike" resultType="int" parameterType="web.dto.Member">
	
	    select count(*) from member m, StylingLike sl, ProductLike pl
        where m.m_no = sl.m_no and m.m_no = pl.m_no and m.m_no = #{m_no }
      		
	</select>

	<select id="selectProductLike" parameterType="int" resultType="web.dto.ProductLike">
		SELECT p_no, m_no, plike_date FROM productlike
	</select>
	
	<select id="selectMemberQuiz" parameterType="int" resultType="web.dto.MemberQuiz">
		SELECT * FROM memberquiz
		WHERE m_no = #{m_no }
	</select>
  	
  	<select id="selectStylingQuiz" resultType="web.dto.QuizQuestion">
  		SELECT * FROM quizquestion
  		ORDER BY qq_no
  	</select>
  	
  	<select id="selectBrand" resultType="web.dto.ProductBrand">
  		SELECT * FROM productbrand 
  		ORDER BY pb_no
  	</select>

  	<select id="selectCategory" resultType="web.dto.ProductCategory">
  		SELECT * FROM productcategory
  		ORDER BY pca_no
  	</select>
  
  	<select id="selectColor" resultType="web.dto.ProductColor">
  		SELECT * FROM productcolor
  		ORDER BY pco_no
  	</select>
 
  	<select id="selectOccasion" resultType="web.dto.ProductOccasion">
  		SELECT * FROM productoccasion 
  		ORDER BY po_no
  	</select>
  	
  	<select id="selectPattern" resultType="web.dto.ProductPattern">
  		SELECT * FROM productpattern 
  		ORDER BY pp_no
  	</select>
  	
  	<select id="selectStyle" resultType="web.dto.ProductStyle">
  		SELECT * FROM productstyle 
  		ORDER BY ps_no
  	</select>  	
  
  	<insert id="insertMemberQuizGender" parameterType="web.dto.MemberQuizSet">
  		INSERT INTO memberquiz(mq_no, m_no, qq_no, mq_answer)
  		VALUES (memberquiz_seq.nextval, #{m_no }, 1, #{p_gender })
  	</insert>
  	<insert id="insertMemberQuizOccasion" parameterType="HashMap">
  		INSERT INTO memberquiz(mq_no, m_no, qq_no, mq_answer)
  		VALUES (memberquiz_seq.nextval, #{m_no }, 2, #{po_no })
  	</insert>
  	<insert id="insertMemberQuizBrand" parameterType="HashMap">
  		INSERT INTO memberquiz(mq_no, m_no, qq_no, mq_answer)
  		VALUES (memberquiz_seq.nextval, #{m_no }, 3, #{pb_no })
  	</insert>
  	<insert id="insertMemberQuizStyle" parameterType="HashMap">
  		INSERT INTO memberquiz(mq_no, m_no, qq_no, mq_answer)
  		VALUES (memberquiz_seq.nextval, #{m_no }, 4, #{ps_no })	
  	</insert>
  	<insert id="insertMemberQuizCategory" parameterType="HashMap">
  		INSERT INTO memberquiz(mq_no, m_no, qq_no, mq_answer)
  		VALUES (memberquiz_seq.nextval, #{m_no }, 5, #{pca_no })
  	</insert>
  	<insert id="insertMemberQuizColor" parameterType="HashMap">
  		INSERT INTO memberquiz(mq_no, m_no, qq_no, mq_answer)
  		VALUES (memberquiz_seq.nextval, #{m_no }, 6, #{pco_no })
  	</insert>
  	<insert id="insertMemberQuizPattern" parameterType="HashMap">
  		INSERT INTO memberquiz(mq_no, m_no, qq_no, mq_answer)
  		VALUES (memberquiz_seq.nextval, #{m_no }, 7, #{pp_no })	
  	</insert>
  	<insert id="insertMemberQuizLprice" parameterType="web.dto.MemberQuizSet">
  		INSERT INTO memberquiz(mq_no, m_no, qq_no, mq_answer)
  		VALUES (memberquiz_seq.nextval, #{m_no }, 8, #{lprice })
  	</insert>
  	<insert id="insertMemberQuizHprice" parameterType="web.dto.MemberQuizSet">
  		INSERT INTO memberquiz(mq_no, m_no, qq_no, mq_answer)
  		VALUES (memberquiz_seq.nextval, #{m_no }, 8, #{hprice })	
  	</insert>	
  	
<!--   	<insert id="insertMemberQuiz" parameterType="web.dto.MemberQuizSet"> -->
<!-- 		INSERT ALL -->
<!-- 			INTO memberquiz(mq_no, m_no, qq_no, mq_answer) VALUES (memberquiz_seq.nextval, #{m_no }, 1, #{p_gender }) -->
<!-- 		<foreach collection="po_no" item="data" > -->
<!-- 			INTO memberquiz(mq_no, m_no, qq_no, mq_answer) VALUES (memberquiz_seq.nextval, #{m_no }, 2, #{data }) -->
<!-- 		</foreach> -->
<!-- 		<foreach collection="pb_no" item="data" > -->
<!-- 			INTO memberquiz(mq_no, m_no, qq_no, mq_answer) VALUES (memberquiz_seq.nextval, #{m_no }, 3, #{data }) -->
<!-- 		</foreach> -->
<!-- 		<foreach collection="ps_no" item="data" > -->
<!-- 			INTO memberquiz(mq_no, m_no, qq_no, mq_answer) VALUES (memberquiz_seq.nextval, #{m_no }, 4, #{data }) -->
<!-- 		</foreach> -->
<!-- 		<foreach collection="pca_no" item="data" > -->
<!-- 			INTO memberquiz(mq_no, m_no, qq_no, mq_answer) VALUES (memberquiz_seq.nextval, #{m_no }, 5, #{data }) -->
<!-- 		</foreach> -->
<!-- 		<foreach collection="pco_no" item="data" > -->
<!-- 			INTO memberquiz(mq_no, m_no, qq_no, mq_answer) VALUES (memberquiz_seq.nextval, #{m_no }, 6, #{data }) -->
<!-- 		</foreach> -->
<!-- 		<foreach collection="pp_no" item="data" > -->
<!-- 			INTO memberquiz(mq_no, m_no, qq_no, mq_answer) VALUES (memberquiz_seq.nextval, #{m_no }, 7, #{data }) -->
<!-- 		</foreach> -->
<!-- 			INTO memberquiz(mq_no, m_no, qq_no, mq_answer) VALUES (memberquiz_seq.nextval, #{m_no }, 8, #{lprice }) -->
<!-- 			INTO memberquiz(mq_no, m_no, qq_no, mq_answer) VALUES (memberquiz_seq.nextval, #{m_no }, 8, #{hprice }) -->
<!-- 		SELECT 1 FROM dual -->
<!--   	</insert> -->
  	
  	<select id="selectRecommendProduct" parameterType="web.dto.MemberQuizSet" resultType="web.dto.Product">
  		SELECT * FROM (
			WITH ratings AS(
    			SELECT 
			        p.p_no, p.p_price, p.p_name, f.fu_storedname, b.pb_name,
			        (select count(*) from productlike l where p.p_no = l.p_no) cntplike,
			        (select count(*) from productlike l where p.p_no = l.p_no and m_no = #{m_no }) plikecheck,
			        <foreach collection="po_no" open="0.8*(CASE WHEN p.po_no= 0" close="THEN 1 ELSE 0 END)" item="p">
				        OR p.po_no= #{p } 
			        </foreach>
			        <foreach collection="pb_no" open="+ 0.2*(CASE WHEN p.pb_no= 0" close="THEN 1 ELSE 0 END)" item="p">
			        	OR p.pb_no= #{p }
			        </foreach>
			        <foreach collection="ps_no" open="+ 0.5*(CASE WHEN p.ps_no= 0" close="THEN 1 ELSE 0 END)" item="p">
			        	OR p.ps_no= #{p }
			        </foreach>
			        <foreach collection="pca_no" open="+ 0.9*(CASE WHEN p.pca_no= 0" close="THEN 1 ELSE 0 END)" item="p">
			        	OR p.pca_no= #{p }
			        </foreach>
			        + 0.8*(CASE WHEN p.p_price BETWEEN #{p_lowprice } AND #{p_highprice } THEN 1 ELSE 0 END)
			        AS score
			    FROM product p
		        JOIN fileupload f
				ON p.fu_no = f.fu_no
		        JOIN productbrand b
		        ON p.pb_no = b.pb_no
		        <if test="p_gender==1">
			        <foreach collection="pco_no" open="WHERE p.p_gender= 'f'" item="p">
			        	AND p.pco_no != #{p }
			        </foreach>
			        <foreach collection="pp_no" item="p">
			        	AND p.pp_no != #{p }
			        </foreach>			        
		        </if>
		        <if test="p_gender==2">
			        <foreach collection="pco_no" open="WHERE p.p_gender= 'm'" item="p">
			        	AND p.pco_no != #{p }
			        </foreach>
			        <foreach collection="pp_no" item="p">
			        	AND p.pp_no != #{p }
			        </foreach>	
		        </if>
			) 
  			<![CDATA[
			    SELECT * FROM ratings 
			    WHERE plikecheck=0
			    ORDER BY score DESC
			) WHERE ROWNUM <= 10
			]]>  	  
  	</select>

  </mapper>